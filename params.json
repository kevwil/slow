{"name":"Slow","body":"This Ruby script is a Sinatra app (http://sinatrarb.com).\r\nTo run it, you need:\r\n\r\n* ruby (written for 1.8.7, should work in 1.9.2+, might work in jruby, etc.)\r\n* rubygems\r\n* sinatra gem\r\n* rack-contrib gem\r\n\r\ncall this file like this: (you need to be root to listen on a port < 1024)\r\n\r\n    (sudo) ruby -rubygems slow.rb -p 80 -e production\r\n\r\nThis will listen like a server but will run in the foreground.\r\nYou need to use the config.ru file to run in the background. Read that file for details.\r\n\r\nor, to skip the port, environment, and rubygems\r\nparts, you can uncomment the rubygems and\r\nconfig variables lines below. Uncommenting the\r\nRack::Lint part will just slow the server down.\r\n\r\n\r\nTo call the service, any request path (URI after server and port) will work.\r\n\r\n* `curl -i http://localhost/foo/bar/baz`\r\n* `curl -i http://localhost/Affinity/v1/session/create`\r\n\r\nOther HTTP verbs also work, specifically GET, POST, PUT, DELETE, and HEAD.\r\n\r\n* `curl -i -XHEAD http://localhost/foo/bar`\r\n* `curl -i -XPUT http://localhost/foo/bar`\r\n* `curl -i -XDELETE http://localhost/foo/bar`\r\n* `curl -i -XPOST -d \"post_param1=hello&post_param2=world\" http://localhost/foo/bar`\r\n\r\nThe script supports POST method override, too.\r\n\r\n* `curl -i -XPOST -d \"_method=PUT&param1=update_me\" http://localhost/my/personal/info`\r\n\r\nThere are two optional querystring parameters you can provide to tweak the behavior.\r\n\r\n* To return a specific error code, with debug info in the body:\r\n   * `curl -i http://localhost/foo/bar/baz?errorcode=403`\r\n* To fail after the timeout is complete, rather than returning a successful 200 OK status.\r\n   * `curl -i http://localhost/foo?fail=true`\r\n","tagline":"Web server used to test long delays and error codes on RESTful web service calls","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}